AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS SAM application to process ZTF daily alerts

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.6
    Timeout: 300

Resources:

  ZTFS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub 'ztf-${AWS::Region}-${AWS::AccountId}'

  ZTFLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /

  ZTFS3AccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3AccessPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - s3:ListBucket
          Resource:
          - !GetAtt ZTFS3Bucket.Arn
          - Fn::Sub:
            - ${ZTFS3BucketArn}/*
            - ZTFS3BucketArn: !GetAtt ZTFS3Bucket.Arn
        - Effect: Allow
          Action: s3:HeadBucket
          Resource: "*"
      Roles:
      - !Ref ZTFLambdaRole

  ZTFRuntimeLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ZTFRuntime
      Description: Base runtime for ZTF functions
      ContentUri: dependencies/ZTFRuntime
      CompatibleRuntimes:
      - python3.6
      LicenseInfo: (c) rostskadat-at-gmail-dot-com
      RetentionPolicy: Delete

  ProcessAvro:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: ztf.ProcessAvro.lambda_handler
      Role: !GetAtt ZTFLambdaRole.Arn
      MemorySize: 256
      Environment:
        Variables:
          HOME: /tmp
      Events:
        TriggerProcessAvro:
          Type: Api
          Properties:
            Path: /avro/process
            Method: post
        ProcessAvro:
          Type: S3
          Properties:
            Bucket: !Ref ZTFS3Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: Avro/
                - Name: suffix
                  Value: .avro
      Layers:
      - !Ref ZTFRuntimeLayer

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ProcessAvroApi:
    Description: "API Gateway endpoint URL for Prod stage for function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/avro/process/"
  ProcessAvro:
    Description: "ProcessAvro Lambda Function ARN"
    Value: !GetAtt ProcessAvro.Arn
