AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS SAM application to process ZTF daily alerts 

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.6
    Timeout: 300

Resources:

  ZTFS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub 'ztf-${AWS::Region}-${AWS::AccountId}'

  ZTFLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  DownloadDailyAlerts:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: ztf.DownloadDailyAlertsHandler
      Role: !GetAtt ZTFLambdaRole.Arn
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref ZTFS3Bucket
          S3_PREFIX: Alerts
      Events:
        DownloadDailyAlert:
          Type: Api
          Properties:
            Path: /DownloadDailyAlerts
            Method: post

  ExpandDailyAlerts:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: ztf.ExpandDailyAlertsHandler
      Role: !GetAtt ZTFLambdaRole.Arn
      Environment:
        Variables:
          S3_PREFIX: Avro
      Events:
        AlertsDownloadedEvent:
          Type: S3
          Properties:
            Bucket: !Ref ZTFS3Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: Alerts/
                - Name: suffix
                  Value: tar.gz

  # ProcessAvroFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: src/
  #     Handler: ztf.ProcessAvroHandler
  #     Events:
  #       ProcessAvro:
  #         Type: Api
  #         Properties:
  #           Path: /ProcessAvro
  #           Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DownloadDailyAlertsApi:
    Description: "API Gateway endpoint URL for Prod stage for function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/DownloadDailyAlerts/"
  DownloadDailyAlerts:
    Description: "DownloadDailyAlerts Lambda Function ARN"
    Value: !GetAtt DownloadDailyAlerts.Arn
